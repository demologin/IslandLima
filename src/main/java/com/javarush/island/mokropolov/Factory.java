package com.javarush.island.mokropolov;import com.javarush.island.mokropolov.entity.Entity;import com.javarush.island.mokropolov.game.GamePreference;import com.javarush.island.mokropolov.game.Randomizer;import com.javarush.island.mokropolov.game.map.Cell;import java.util.Arrays;import java.util.List;import java.util.Map;import java.util.Set;public class Factory {    public static final int PERCENT_FILL = 50;    public static final int PERCENT_PROBABLY_BORN = 50;    public Cell createRandomCell(boolean empty) {        Cell cell = new Cell();        Map<String, Set<Entity>> cellsEntity = cell.getCellsEntities();        boolean fillProbability = Randomizer.get(PERCENT_FILL);        if (fillProbability && !empty) {            for (Entity prototype : GamePreference.PROTOTYPES) {                String type = prototype.getType();                boolean born = Randomizer.get(PERCENT_PROBABLY_BORN);                if (born) {                    Set<Entity> entities = cellsEntity.get(type);                    int currentCount = entities.size();                    int max = prototype.getMaxCount() - currentCount;                    int count = Randomizer.random(0, max);                    for (int i = 0; i < count; i++) {                        Entity entity = Entity.clone(prototype);                        entities.add(entity);                    }                }            }        }        return cell;    }    public List<Entity> getAllPrototypes() {        return Arrays.asList(GamePreference.PROTOTYPES);    }}